#!/usr/bin/lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 7/29/24 2:13 PM
---
---

local tf = require "tf_module"

local localtime = { name = "localtime", str = "\tlocaltime:   " }
local sntp_configList =
{
    tfortis = { name = "zonename",      str = "\ttime zone:   " },
    ntp     = { name = "server",        str = "\tservers:     " },
    state   = { name = "enabled",       str = "\tstate:       " },
    time    = { name = "time",          str = "\tsystem time: " }
}

local sntp_enum =
{
    ["0"] = "disable",
    ["1"] = "enable"
}

local local_time_cmd = "ubus call system info"
local sntp_config_cmd = "ubus call uci get '{\"config\":\"system\"}'"

local function convertUnixTime(unixTime)
    local date = os.date("*t", unixTime)
    local formattedDate = string.format("%02d-%02d-%02d %02d:%02d:%02d", date.year, date.month, date.day, date.hour, date.min, date.sec)

    return formattedDate
end

local function run_show_sntp()

    local time = tf.executeCommand("date +\"%d %B %Y %T\"")
    local sntp_config_jsonInfo = tf.collectJsonTable(sntp_config_cmd)
    sntp_config_jsonInfo = sntp_config_jsonInfo["values"]
    if sntp_config_jsonInfo["tfortis"] == nil then
        print("error: system config is wrong")
        return
    end
    local sntp_timezone_jsonInfo = sntp_config_jsonInfo["tfortis"]

    if sntp_config_jsonInfo["ntp"] == nil then
        print("error: ntp config is wrong")
        return
    end

    local sntp_ntp_jsonInfo = sntp_config_jsonInfo["ntp"]
    local state = ""
    if sntp_ntp_jsonInfo[sntp_configList.state.name] == nil then
        state = "1"
    else
        state = sntp_ntp_jsonInfo[sntp_configList.state.name]
    end
    print(sntp_configList.state.str .. sntp_enum[state])

    if time ~= nil then
        string.gsub(time, "\n", "")
        io.write(sntp_configList.time.str, time)
    end

    local zoneParts = {}
    local timestr = sntp_configList.tfortis.str .. "GMT "
    for part in string.gmatch(sntp_timezone_jsonInfo[sntp_configList.tfortis.name], "[-+%d]") do
        table.insert(zoneParts, part)
        timestr = timestr .. part
    end
    print(timestr)

    if sntp_ntp_jsonInfo[sntp_configList.ntp.name] ~= nil then
        print(sntp_configList.ntp.str)
        local servers = sntp_ntp_jsonInfo[sntp_configList.ntp.name]
        for i, server in pairs(servers) do
            print("\t\t" .. i .. ":   " .. server)
        end
    end
end

run_show_sntp()


