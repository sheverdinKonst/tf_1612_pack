#!/usr/bin/lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 7/25/24 2:42 PM
---

local tf = require "tf_module"

local path = "/usr/lib/opkg/info/"
local path1 = "/usr/libexec/opkg-call"

local packetType_list = {
    installed = "list-installed",
    available = "list-available"
}

local function textToJSON(text)
    local json = "{\n"
    for line in text:gmatch("[^\r\n]+") do
        local key, value = line:match("(.-):%s*(.*)")
        if key and value then
            json = json .. '"' .. key .. '":' .. (key == "Description" and ('"' .. value .. '"') or '"' .. value .. '",') .. ' ' .. "\n"
        end
    end
    json = json:sub(1, -3) -- удалить последнюю запятую и пробел
    json = json .. "\n}"
    return json
end

local function get_packet_JsonInfo(input_str)
    local packageList = {}

    local currentPackage = ''
    for line in input_str:gmatch("[^\r\n]+") do
        if line:find("Package:") then
            currentPackage = line:match("Package:%s*(.+)")
            packageList[currentPackage] = {}
        else
            local key, value = line:match("([^:]+):%s*(.+)")
            if key and value then
                value = value .. "\n"
                packageList[currentPackage][key] = value
            end
        end
    end

    local json = require("dkjson")
    local jsonData = json.encode({ Package = packageList })
    return jsonData
end

local function get_PacketInfo()
    local packetName = "base-files.control"
    local packetInfo = tf.executeCommand("cat " .. path .. packetName)
    print("packetInfo = ")
    print(packetInfo)
    local packet_json = textToJSON(packetInfo)
    print("packet_json = ")
    --print(packet_json)
end

-- get_PacketInfo()

local function run_show_packets()
    local packet_type = "installed"
    local cmd = path1 .. " " .. packetType_list[packet_type]
    --print("cmd = " .. cmd)
    local packetInfo = tf.executeCommand(cmd)
    local jsonData = get_packet_JsonInfo(packetInfo)
    local packet_jsonInfo = tf.decodeToJson(jsonData)
    if packet_jsonInfo ~= nil then
        packet_jsonInfo = packet_jsonInfo.Package
        print("Installed Packages: ")
        for packet, dict in pairs(packet_jsonInfo) do
            print(packet)
            --for param, value in pairs(dict) do
            --print("\tparam = " .. param)
            --end
        end
    else
        print("packet_jsonInfo not valid")
    end
end


run_show_packets()
